ZJT 转经筒修行区域
要做一个游戏，窗口大小为600 x 1000 pixels.

视频播放系统：
视频文件：./assets/zjt.mp4
- 视频长度：7秒
- 播放位置：全屏显示（600x1000像素）
- 播放模式：循环播放
- 初始状态：暂停（速度为0）
- 视频加载：支持OpenCV加载真实视频，若无法加载则显示动画占位符

播放速度控制系统：
速度档位定义：
- V0：暂停（初始状态）
- V1：35秒播完（0.2倍速）
- V2：25秒播完（0.28倍速）
- V3：14秒播完（0.5倍速）
- V4：7秒播完（1.0倍速，最高速度）

速度切换机制：
- 鼠标横向拖拽检测：当鼠标水平移动距离 > 30像素时触发速度提升
- 速度提升序列：V0 → V1 → V2 → V3 → V4
- 连续拖拽支持：单次拖拽可连续提升多个速度等级
- 冷却时间：每次速度提升间隔200毫秒，防止过快增加
- 达到V4后，继续拖拽保持V4不变
- 拖拽时鼠标指针变为抓手形状

自动降速系统：
降速时间规则：
- V4状态：10秒无操作 → V3，再5秒 → V2，再5秒 → V1
- V3状态：10秒无操作 → V2，再5秒 → V1
- V2状态：10秒无操作 → V1
- V1状态：10秒无操作 → V0（暂停）

MP修行点数系统：
MP进度条：
- 位置：窗口底部（叠加在视频上方）
- 尺寸：400x20像素，居中显示
- 字体：Arial，24号，加粗
- 格子系统：20个小格子
- 初始颜色：浅蓝色
- 完成颜色：红色

修行点数获得规则：
- 每完成一次视频播放（7秒内容播完），获得1点MP
- MP获得与播放速度无关
- 获得MP时，对应格子从浅蓝色变为红色
- 满20点MP后的处理方式（待定）

UI层（全部叠加在视频上方）：

返回按钮：
- 位置：窗口右上角
- 图片：./assets/back.png
- 尺寸：50x50像素
- 功能：点击退出转经筒界面

速度显示：
- 位置：窗口底部，MP进度条下方
- 显示格式："Speed: V0/V1/V2/V3/V4"
- 字体：Arial，20号
- 颜色：白色

时间显示：
- 位置：视频区域底部中央
- 显示格式："当前时间s / 总时长s"
- 字体：24号
- 颜色：白色
- 背景：半透明黑色，增强可读性

鼠标交互系统：
拖拽检测：
- 检测方向：仅水平方向有效
- 触发阈值：水平移动距离 > 30像素
- 视觉反馈：拖拽时显示抓手光标
- 连续提升：支持单次拖拽连续提升多个速度等级
- 冷却机制：200毫秒冷却时间防止过快触发

技术实现要点：
1. 使用pygame开发
2. 帧率：60 FPS
3. 视频播放：
   - 优先使用OpenCV加载真实视频文件
   - 支持帧序列播放和速度控制
   - 提供动画占位符作为备选方案
4. 播放速度控制：通过调整帧序列播放速度实现
5. 状态管理：维护当前速度状态和最后操作时间
6. 自动降速：使用计时器系统检测无操作时间

渲染顺序：
1. 第一层：全屏视频播放（600x1000）
2. 第二层：UI元素叠加层（MP进度条、速度显示、时间显示）
3. 第三层：返回按钮
4. 第四层：指令文本和调试信息

游戏特色：
- 模拟转经筒修行体验
- 全屏沉浸式视频播放
- 渐进式速度控制系统
- 自动降速机制鼓励持续操作
- MP修行点数积累系统提供成就感
- 直观的拖拽交互设计
- 支持真实视频和占位符动画

实现更新记录（2025-07-31）：
1. 视频尺寸从部分屏幕改为全屏显示（600x1000）
2. 视频文件路径更正：./character/zjt.mp4 → ./assets/zjt.mp4
3. 返回按钮路径更正：./character/back.jpg → ./assets/back.png
4. 经验系统从XP改为MP（修行点数）
5. 添加OpenCV视频加载支持
6. 实现连续拖拽速度提升机制
7. 添加速度提升冷却时间（200ms）
8. UI元素全部改为视频叠加显示
9. 添加时间显示和半透明背景
10. 完善占位符动画（转经筒旋转效果）
11. 修复初始化顺序问题确保正确运行

备注：
- 本游戏提供完整的转经筒修行模拟体验
- 支持真实视频文件播放，无视频时自动使用动画占位符
- 所有UI元素叠加在视频上方，确保全屏沉浸感
- 拖拽交互设计直观，支持连续速度提升