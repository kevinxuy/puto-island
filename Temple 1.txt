Temple 1 寺庙区域
要做一个游戏，窗口大小为600 x 1000 pixels.
分为两层，map层和UI层。

Map层：
背景地图用 ./assets/temple1/t1map.png, 居中
地图用鼠标drag来scroll.
要注意边界条件，不要scroll出地图的边界。

地图位置定义：
在地图上有这些点的坐标。
T11: (366, 542) - Temple1位置
T11_c: (284, 428) - Temple1按钮中心
T12: (513, 367) - Temple2位置
T12_c: (519, 234) - Temple2按钮中心
T13: (636, 528) - Temple3位置
T13_c: (719, 415) - Temple3按钮中心
C1: (524, 610) - 中心路口
E1: (513, 804) - 出入口

路径定义：
路径连接规则（双向连接）：
- C1为中心点
- E1 连接 C1
- T11 连接 C1
- T12 连接 C1
- T13 连接 C1
路径寻找算法：使用BFS（广度优先搜索）计算最短路径。

小人（Character）系统：
生成规则：
- 在E1位置spawn小人
- 生成间隔：随机5-10秒
- 小人类型：随机选择c1到c9（对应./assets/characters/目录下的9种小人）
- 小人尺寸：0.5倍缩放
- 移动速度：0.5像素/帧

小人状态系统：
- MOVING：正常移动状态
- AT_DESTINATION：到达目的地，在寺庙内停留
- DISAPPOINTED：失望状态，寺庙未升级
- SATISFIED_LEAVING：满意离开状态，从寺庙出来

小人动画系统：
- 每个小人有4个方向的动画（左、右、下、上）
- 每个方向4帧，每帧显示250毫秒
- 文件命名：cx_y-z.png（x=角色编号1-9，y=方向1-4，z=帧数1-4）
- 方向定义：1=左，2=右，3=下，4=上

小人行为逻辑：
1. 目的地选择：随机选择 T11, T12, T13 之一
2. 路径计算：使用BFS算法计算从当前位置到目的地的最短路径
3. 生命周期：1分钟后自动返回E1

小人图标显示规则：
- 去T11/T12/T13时（想拜佛）：顶着 ./assets/budda.png
- 返回E1时：顶着 ./assets/burger.png
- 满意离开时：顶着 ./assets/coin.png（到达C1后恢复原图标）
- 失望时：不显示任何图标，只显示失望文字
- 所有icon尺寸：20x20像素

小人到达目的地行为（重要说明）：
1. 到达后立即检查游戏整体等级（Level）
2. 如果Level >= 1（游戏等级达到1级或以上，小人永远满意）：
   - 状态变为AT_DESTINATION
   - 小人变为不可见（不渲染）
   - 停留20秒
   - 之后重新出现，状态变为SATISFIED_LEAVING
   - 顶着coin图标离开
   - 到达C1后恢复正常状态和图标
   - 选择新目的地或返回E1（根据生命周期）
3. 如果Level < 1，则检查对应寺庙等级：
   - 如果寺庙level >= 5：小人满意（同上述行为）
   - 如果寺庙level < 5：小人失望
     * 状态变为DISAPPOINTED
     * 立即计算返回E1的路径
     * 设置destination = "E1"
     * 显示失望文字"No Buddha!"
     * 不显示任何图标

小人消失条件：
- 当destination == "E1"且到达E1位置（距离<10像素）时立即从游戏中移除

寺庙升级系统：
物品定义：
- 5个可升级物品，对应5个寺庙建筑
- 每个物品初始状态为level 0
- 最高可升级到level 5
- 物品中心坐标：
  - 物品1: (296, 421)
  - 物品2: (513, 221)
  - 物品3: (730, 444)
  - 物品4: (519, 614)
  - 物品5: (416, 732)

升级动画系统：
1. 升级到level 1-4时：
   - 循环显示3次建造动画（每次1秒）
   - 动画序列：construction1-5.png，每张0.2秒
   - 显示尺寸：200x200
   - 动画结束后显示construction.png（200x200）
2. 升级到level 5时：
   - construction.png消失
   - 播放烟花动画：fireworks1-6.png，每张0.1秒
   - 显示尺寸：400x500
   - 之后显示对应的完成图片（t1_1.png到t1_5.png，原始尺寸）

UI层：

等级显示系统：
- 初始值：T1 = 0
- 显示位置：窗口左上角 (10, 10)
- 显示格式："Level = T1"（T1为数值）
- 字体大小：30
- 字体颜色：红色

返回按钮：
- 位置：(550, 50)
- 尺寸：30x30
- 图片：./assets/back.png
- 功能：点击返回主地图（运行main_game.py）

升级按钮系统：
- 5个升级按钮，位于窗口底部
- 按钮样式：米黄色背景，金色边框
- 按钮尺寸：90x90
- 按钮位置（左上角）：
  - 按钮1: (50, 800)
  - 按钮2: (150, 800)
  - 按钮3: (250, 800)
  - 按钮4: (350, 800)
  - 按钮5: (450, 800)
- 按钮图标（64x64，居中显示）：
  - ./assets/temple1/t1_1_icon.png
  - ./assets/temple1/t1_2_icon.png
  - ./assets/temple1/t1_3_icon.png
  - ./assets/temple1/t1_4_icon.png
  - ./assets/temple1/t1_5_icon.png


进度条系统：
- 每个按钮上方24像素处有进度条
- 尺寸：90x18
- 分成5个格子，金色边框
- 初始状态：所有格子为红色
- 每升一级，一个格子变绿色
- level 5时所有格子变绿色

地图自动居中（动画效果）：
- 点击升级按钮时，地图会平滑滚动让对应建筑居中显示
- 动画时长：0.5秒
- 使用ease-in-out cubic缓动函数，实现自然的加速减速效果
- 如果在动画过程中开始拖拽地图，动画会立即取消
- 始终遵守地图边界限制

等级完成系统（重要功能）：
- 检测条件：当T1_1, T1_2, T1_3, T1_4, T1_5全部到达5级
- 弹出祝贺窗口：
  - 窗口尺寸：300x200
  - 窗口位置：屏幕中央
  - 背景：白色，黑色边框(3px)
  - 文字内容："Congratulations, You've Upgraded!"
  - OK按钮：金色背景，黑色边框，位于窗口底部
- 点击OK后的行为：
  - T1等级加1（Level = T1数值增加）
  - 所有建筑的level重置为0
  - 进度条恢复初始状态（全部变回红色）
  - 重要：已建成的建筑图片(t1_1.png至t1_5.png)保持显示，不消失
  - 祝贺窗口关闭，可继续游戏

技术实现要点：
1. 使用pygame开发
2. 帧率：60 FPS
3. 坐标系：左上角为(0,0)
4. 渲染顺序（重要）：
   - 第一层：背景地图
   - 第二层：已完成的建筑图片(t1_1.png等)和静态construction图片
   - 第三层：小人
   - 第四层：动画层（construction动画和fireworks动画）- 确保不被建筑图片遮挡
   - 第五层：UI层（按钮、等级显示、祝贺窗口等）
5. 小人的z-index：在美术层之上，UI层之下
6. 使用subprocess.Popen打开子游戏文件
7. 主游戏文件：temple1.py
8. 动画优先级：正在播放的动画必须显示在所有静态建筑图片之上

修改优化记录（2025-07-31）：
1. 统一了文档格式，与mainmap.txt保持一致
2. 明确了小人状态系统（4种状态）
3. 详细说明了失望和满意的完整流程
4. 添加了地图平滑居中动画说明
5. 补充了进度条系统的详细说明
6. 整理了坐标系统，明确了各个元素的位置
7. 新增等级显示系统（左上角红色Level = T1显示）
8. 新增等级完成系统（全5级后弹出祝贺窗口，T1增加，重置进度）
9. 修正渲染顺序问题（动画层在建筑图片之上，避免被遮挡）
10. 明确了建筑保持机制（升级后建筑图片永久保留）
11. 重要更新：小人满意度逻辑优化 - 当Level >= 1时，所有小人永远满意，不再出现失望状态
12. 图标系统更新：返回E1时显示burger.png图标，所有图标统一为20x20像素